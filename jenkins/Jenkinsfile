def updateStatus(statusName, descriptionName){
    commit = "${GIT_COMMIT}"
    githubNotify status: statusName,
        description: descriptionName,
        repo: 'ksi-js-api',
        credentialsId: 'github-api-token-up',
        account: 'guardtime',
        sha: commit
}

pipeline {
    agent {
        docker {
            image 'node:20-alpine'
            label 'centos7'
        }
    }
    environment {
        SHORT_COMMIT = "${GIT_COMMIT[0..7]}"
    }
    stages {
        stage('build') {
            steps {
                updateStatus("PENDING", "Build pending")
                sh 'npm ci'
                configFileProvider([configFile(fileId: '1b7cf923-c23c-4cbe-ad27-1ddb609a90cd', targetLocation: "./config/ksi-config.js")]) {
                    sh 'npm run test:ci'
                    sh 'npm run integration-test:ci'
                }
                sh 'npm run lint'
                sh 'npm run build'
                archiveArtifacts artifacts: 'dist/**', fingerprint: true
                junit testResults: 'coverage/junit.xml'
                step([
                    $class: 'CloverPublisher',
                    cloverReportDir: 'coverage',
                    cloverReportFileName: 'clover.xml'
                ])
            }
        }
    }
    post {
        failure {
            updateStatus("FAILURE", "Build has failed")
        }
        success {
            updateStatus("SUCCESS", "Build successful")
        }
        cleanup {
            cleanWs()
        }
    }
}
