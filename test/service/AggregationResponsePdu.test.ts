/**
 * Aggregation Response PDU tests
 */
import Base64Coder from '@guardtime/gt-js-common/lib/coders/Base64Coder';
import { TlvInputStream } from '../../src/common/parser/TlvInputStream';
import { AggregationResponsePdu } from '../../src/common/service/AggregationResponsePdu';
import { ErrorPayload } from '../../src/common/service/ErrorPayload';

describe('AggregationResponsePdu', () => {
  it('Test with error pdu', () => {
    const responseBytes = Base64Coder.decode(
      'giEAjAERAQVhbm9uAAIEWASCWAMCoMgCMAEIdmHr5rYQpL0EAgEHBSB0aGlzLWVycm9yLXNob3VsZC1OT1QtYmUtdGhyb3duAAMiBAIBAQUcdGhpcy1lcnJvci1zaG91bGQtYmUtdGhyb3duAB8hAdW8P1RNQwTEXHJDwVLjdIY+gbkN2MeQwv8uCMatmn4g'
    );
    const responsePdu = new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());

    expect((responsePdu.getErrorPayload() as ErrorPayload).getErrorMessage()).toEqual('this-error-should-be-thrown');
  });

  it('Throw error on header not being first in pdu', () => {
    const responseBytes = Base64Coder.decode(
      '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'
    );

    expect(() => {
      return new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());
    }).toThrow('Header must be the first element in PDU.');
  });
});
