/**
 * Aggregation Response PDU tests
 */
import Base64Coder from '@guardtime/common/lib/coders/Base64Coder';
import DataHash from '@guardtime/common/lib/hash/DataHash';
import HashAlgorithm from '@guardtime/common/lib/hash/HashAlgorithm';
import { TlvInputStream } from '../../src/common/parser/TlvInputStream';
import { AggregationResponsePdu } from '../../src/common/service/AggregationResponsePdu';
import { ErrorPayload } from '../../src/common/service/ErrorPayload';
import { KsiService } from '../../src/common/service/KsiService';
import { ServiceCredentials } from '../../src/common/service/ServiceCredentials';
import { SigningService } from '../../src/common/service/SigningService';
import { TestServiceProtocol } from './TestServiceProtocol';

describe('AggregationResponsePdu', () => {
  it('Test with error pdu', () => {
    const responseBytes = Base64Coder.decode(
      'giEAjAERAQVhbm9uAAIEWASCWAMCoMgCMAEIdmHr5rYQpL0EAgEHBSB0aGlzLWVycm9yLXNob3VsZC1OT1QtYmUtdGhyb3duAAMiBAIBAQUcdGhpcy1lcnJvci1zaG91bGQtYmUtdGhyb3duAB8hAdW8P1RNQwTEXHJDwVLjdIY+gbkN2MeQwv8uCMatmn4g'
    );
    const responsePdu = new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());

    expect((responsePdu.getErrorPayload() as ErrorPayload).getErrorMessage()).toEqual('this-error-should-be-thrown');
  });

  it('Throw error on header not being first in pdu', () => {
    const responseBytes = Base64Coder.decode(
      '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'
    );

    expect(() => {
      return new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());
    }).toThrow('Header must be the first element in PDU.');
  });

  it('Invalid HMAC', async () => {
    const responseBytes = Base64Coder.decode(
      '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'
    );

    const ksiService = new KsiService(
      new SigningService(
        new TestServiceProtocol(responseBytes),
        new ServiceCredentials('anon', new Uint8Array([0x61, 0x6e, 0x6f, 0x6e]), HashAlgorithm.SHA2_256)
      ),
      null,
      null
    );

    await expect(ksiService.sign(DataHash.create(HashAlgorithm.SHA2_256, new Uint8Array(32)))).rejects.toThrow(
      'Response HMAC is not correct.'
    );
  });

  it('Missing payload', async () => {
    const responseBytes = Base64Coder.decode(
      'giEANgERAQVhbm9uAAIEWASCWAMClNofIQFVeO/nuwNCR8mK1XzyrpqPYpcBDXPcEc3zS6EsYwSWZw=='
    );

    expect(() => {
      return new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());
    }).toThrow('Payloads are missing in PDU.');
  });

  it('Missing request ID from response payload', async () => {
    const responseBytes = Base64Coder.decode(
      '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'
    );

    expect(() => {
      return new AggregationResponsePdu(new TlvInputStream(responseBytes).readTag());
    }).toThrow('Exactly one request id must exist in response payload.');
  });
});
